plugins {
    id 'eclipse'
    id 'maven-publish'
    id 'net.neoforged.gradle.userdev' version '7.0.142'
}

version = '1.2.2'
group = 'com.github.mrblueyeti'
archivesBaseName = "BetterDogsForDTN-1.21[NeoForge]"

java.toolchain.languageVersion = JavaLanguageVersion.of(21)

println "Java: ${System.getProperty 'java.version'}, JVM: ${System.getProperty 'java.vm.version'} (${System.getProperty 'java.vendor'}), Arch: ${System.getProperty 'os.arch'}"

sourceSets {
    main
}
 
tasks.named("processResources") {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

configurations { 
}

runs {
    client {
        workingDirectory file('run')
        systemProperty 'forge.logging.console.level', 'debug'
        modSources.add(project.getSourceSets().main)
    }

    server {
        workingDirectory file('run-server')
        systemProperty 'forge.logging.console.level', 'debug'
        modSources.add(project.getSourceSets().main)
    }
}

// Include resources generated by data generators.
sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    // Put repositories for dependencies here
    // ForgeGradle automatically adds the Forge maven and Maven Central for you

    // If you have mod jar dependencies in ./libs, you can declare them as a repository like so:
    flatDir {
        dir 'libs'
    }
}

dependencies {

    implementation "net.neoforged:neoforge:21.1.1"
    compileOnly "blank:DoggyTalentsNext-1.21.1:1.18.31-api"
}

jar {
    from sourceSets.main.output

    manifest {
        attributes([
            "Specification-Title": "Better Dogs For DTN",
            "Specification-Vendor": "MrBlueYeti",
            "Specification-Version": project.version,
            "Implementation-Title": project.name,
            "Implementation-Version": project.version,
            "Implementation-Vendor" :"MrBlueYeti",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}


// publishing {
//     publications {
//         mavenJava(MavenPublication) {
//             artifact jar
//         }
//     }
//     repositories {
//         maven {
//             url "file://${project.projectDir}/mcmodsrepo"
//         }
//     }
// }

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8' // Use the UTF-8 charset for Java compilation
}