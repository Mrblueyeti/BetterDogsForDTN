plugins {
    id 'eclipse'
    id 'maven-publish'
    id 'fabric-loom' version '1.5-SNAPSHOT'
}

version = '1.2.1'
group = 'com.github.mrblueyeti'
archivesBaseName = "BetterDogsForDTN[Fabric]-1.20.1"

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

sourceSets {
    main
}

repositories {
    // Put repositories for dependencies here
    // ForgeGradle automatically adds the Forge maven and Maven Central for you

    // If you have mod jar dependencies in ./libs, you can declare them as a repository like so:
    flatDir {
        dir 'libs'
    }
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings loom.officialMojangMappings()
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
    
	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	// Uncomment the following line to enable the deprecated Fabric API modules. 
	// These are included in the Fabric API production distribution and allow you to update your mod to the latest modules at a later more convenient time.

	// modImplementation "net.fabricmc.fabric-api:fabric-api-deprecated:${project.fabric_version}"

	implementation 'javax.inject:javax.inject:1'
	testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:5.8.1")
    testImplementation("org.junit.jupiter:junit-jupiter-api:5.8.1")
	implementation 'com.google.code.findbugs:jsr305:3.0.2'
    
    compileOnly "blank:DoggyTalentsNext[Fabric]-1.20.1:1.18.8-api"
}

// Include resources generated by data generators.
sourceSets.main.resources { srcDir 'src/generated/resources' }


jar {
    from sourceSets.main.output

    manifest {
        attributes([
            "Specification-Title": "Better Dogs For DTN",
            "Specification-Vendor": "MrBlueYeti",
            "Specification-Version": project.version,
            "Implementation-Title": project.name,
            "Implementation-Version": project.version,
            "Implementation-Vendor" :"MrBlueYeti",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}


// publishing {
//     publications {
//         mavenJava(MavenPublication) {
//             artifact jar
//         }
//     }
//     repositories {
//         maven {
//             url "file://${project.projectDir}/mcmodsrepo"
//         }
//     }
// }

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8' // Use the UTF-8 charset for Java compilation

    // Minecraft 1.18 (1.18-pre2) upwards uses Java 17.
    it.options.release = 17
}